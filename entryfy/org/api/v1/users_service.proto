syntax = "proto3";

package entryfy.org.api.v1;
import "entryfy/org/api/v1/entities.proto";
import "google/protobuf/timestamp.proto";

option go_package = "pkg/entryfy/org/api/v1";
option java_multiple_files = true;
option java_package = "com.entryfy.org.api.v1";
option csharp_namespace = "Entryfy.Org.Api.V1";
option ruby_package = "Entryfy::Org::Api::V1";

service UsersService {
  rpc GetUsers (GetUsersRequest) returns (GetUsersResponse) {
  }
  rpc CreateUsers (CreateUsersRequest) returns (CreateUsersResponse) {
  }
  rpc UpdateUsers (UpdateUsersRequest) returns (UpdateUsersResponse) {
  }
  rpc DeleteUsers (DeleteUsersRequest) returns (DeleteUsersResponse) {
  }
  rpc ResendCredentials (ResendCredentialsRequest) returns (ResendCredentialsResponse) {
  }
  rpc AssignKeyCards(AssignKeyCardsRequest) returns (AssignKeyCardsResponse) {}
}

message GetUsersRequest {
  string organization_slug = 1;
  repeated string uuids = 2; // Send an empty array to fetch all users
}

message GetUsersResponse {
  repeated User users = 1;
}

message CreateUsersRequest {
  message CreateKeyCard {
    string uuid = 1;
    string value = 2;
    string nr = 3; // Mandatory
    string label = 4;
  }

  message CreateUser {
    string uuid = 1; // Non-mandatory, UUID to assign to the user
    string email = 2;
    string first_name = 3;
    string last_name = 4;
    string password = 5; // Non-mandatory, would be autogenerated if empty
    repeated string roles = 6; // Possible roles are: orgadmin, normal, operator, guest
    google.protobuf.Timestamp valid_from = 7; // Non-mandatory
    google.protobuf.Timestamp valid_to = 8; // Non-mandatory
    bool enabled = 9;
    map<string, string> preferences = 10;  // Non-mandatory
    CreateKeyCard key_card = 11;  // Non-mandatory
    repeated string initial_access_uuids = 12;  // Non-mandatory
    repeated string initial_group_uuids = 13; // Non-mandatory. Used just for backward-compatibility, would be obsolete soon
    repeated string initial_group_set_uuids = 14; // Non-mandatory. Used just for backward-compatibility, would be obsolete soon
  }

  string organization_slug = 1;
  repeated CreateUser users = 2;
  bool send_welcome_email = 3; // Non-mandatory
}

message CreateUsersResponse {
  repeated BizOperation biz_operations = 1;
}

message UpdateUsersRequest {
  message UpdateUser {
    string uuid = 1; // Mandatory
    string email = 2;
    string first_name = 3;
    string last_name = 4;
    repeated string roles = 5; // Possible roles are: orgadmin, normal, operator, guest
    google.protobuf.Timestamp valid_from = 6; // Non-mandatory
    google.protobuf.Timestamp valid_to = 7; // Non-mandatory
    bool enabled = 8;
    map<string, string> preferences = 9; // Non-mandatory
  }

  string organization_slug = 1;
  repeated UpdateUser users = 2;
}

message UpdateUsersResponse {
  repeated BizOperation biz_operations = 1;
}

message DeleteUsersRequest {
  string organization_slug = 1;
  repeated string uuids = 2;
}

message DeleteUsersResponse {
  repeated BizOperation biz_operations = 1;
}

message ResendCredentialsRequest {
  string organization_slug = 1;
  repeated string uuids = 2;
}

message ResendCredentialsResponse {
}

message AssignKeyCardsRequest{
  message KeyCardAssignment {
    string key_card_uuid = 1;
    repeated string door_uuids = 2;
  }

  string organization_slug = 1;
  repeated KeyCardAssignment assignments = 2;
}

message AssignKeyCardsResponse{
  repeated BizOperation biz_operations = 1;
}